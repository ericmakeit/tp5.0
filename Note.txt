程序开发笔记


2018年3月24日

一、thinkphp 5.1.15 软删除问题

   1、开发手册，《掌握ThinkPHP5.0数据库和模型》第七章 模型高级用法－〉软删除一节

   “要使用软删除功能，需要引入SoftDelete trait”

   <?php

   namespace app\index\model;

   use think\Model;
 ：use traits\model\SoftDelete;

   class User extends Model
   {
       use SoftDelete;
   }

   实际使用过程中，不在该目录，5.1.15版位置在thinkphp\library\think\model\concern


  2、***为了配合软删除功能，你需要在数据表中添加delete_time字段，ThinkPHP5的软删除功能使用时间戳类型（数据表默认值为Null），用于记录数据的删除时间。

   mysql 5.7以上版本，添加该字段，设置为DATETIME类型时会报错 #1292

   经过大量的查找资料后发现，问题出现my.ini里面的sql-mode的设置上，sql-mode默认为"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"，这里把STRICT_TRANS_TALBES去掉之后，重启MySQL，就OK了。

   *另：https://www.cnblogs.com/chentging/p/7191336.html给出另一解决办法

   Mysql 数据库date, datetime类型设置0000-00-00默认值报错问题

   现象:MySQL5.7版本之后,date, datetime类型设置默认值"0000-00-00",出现异常:Invalid default value for 'time'

   原因:在命令行窗口查看当前的sql_mode配置:

   select @@sql_mode;

   结果如下:
   ONLY_FULL_GROUP_BY, STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE,
   ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, and NO_ENGINE_SUBSTITUTION
   其中NO_ZERO_IN_DATE, NO_ZERO_DATE两个选项禁止了0000这样的日期和时间。因此在mysql的配置文件中，重新设置sql_mode，去掉这两项就可以了。

   解决办法
   windows系统下:

   使用 SET [SESSION|GLOBAL] sql_mode=’modes’
   注意:SESSION(默认选项):表示当前回话中生效;GLOBAL(需重启):表示全局生效
   也可以修改my.ini配置文件

   ***
       演示:
           SET GLOBAL sql_mode=’ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,
           ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION’
   Linux系统下:

   修改my.cnf文件，在[mysqld]中添加

   sql-mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
   修改完成一定重启MySQL

   Mac系统下:

   在MacOS中默认是没有my.cnf 文件，如果需要对MySql 进行定制，拷贝/usr/local/mysql/support-files/目录
   中任意一个.cnf 文件。笔者拷贝的是my-default.cnf，将它放到其他目录，按照上面修改完毕之后，更名为
   my.cnf，然后拷贝到/etc目录再重启下mysql就大功告成了。
   sql_mode模式问题拓展
   sql_mode 常用值说明
   SQL语法支持类
   ONLY_FULL_GROUP_BY

   对于GROUP BY聚合操作，如果在SELECT中的列、HAVING或者ORDER BY子句的列，没有在GROUP BY中出现，那么这个SQL是不合法的。是可以理解的，因为不在 group by 的列查出来展示会有矛盾。 在5.7中默认启用，所以在实施5.6升级到5.7的过程需要注意：

   ANSI_QUOTES

   启用 ANSI_QUOTES 后，不能用双引号来引用字符串，因为它被解释为识别符，作用与 ` 一样。

   设置它以后，update t set f1="" ...，会报 Unknown column ‘’ in ‘field list 这样的语法错误。

   PIPES_AS_CONCAT

   将 || 视为字符串的连接操作符而非运算符，这和Oracle数据库是一样的，也和字符串的拼接函数 CONCAT() 相类似

   NO_TABLE_OPTIONS

   使用 SHOW CREATE TABLE 时不会输出mysql特有的语法部分，如 ENGINE ，这个在使用 mysqldump 跨DB种类迁移的时候需要考虑

   NO_AUTO_CREATE_USER

   字面意思不自动创建用户。在给MySQL用户授权时，我们习惯使用 GRANT ... ON ... TO dbuser顺道一起创建用户。设置该选项后就与oracle操作类似，授权之前必须先建立用户。5.7.7开始也默认了。

   数据检查类

   NO_ZERO_DATE

   认为日期 ‘0000-00-00’ 非法，与是否设置后面的严格模式有关。

   1）.如果设置了严格模式，则 NO_ZERO_DATE 自然满足。但如果是 INSERT IGNORE 或 UPDATE IGNORE，’0000-00-00’依然允许且只显示warning

   2）.如果在非严格模式下，设置了NO_ZERO_DATE，效果与上面一样，’0000-00-00’允许但显示warning；如果没有设置NO_ZERO_DATE，no warning，当做完全合法的值。

   3）.NO_ZERO_IN_DATE情况与上面类似，不同的是控制日期和天，是否可为 0 ，即 2010-01-00 是否合法。

   NO_ENGINE_SUBSTITUTION

   使用 ALTER TABLE或CREATE TABLE 指定 ENGINE 时， 需要的存储引擎被禁用或未编译，该如何处理。启用NO_ENGINE_SUBSTITUTION时，那么直接抛出错误；不设置此值时，CREATE用默认的存储引擎替代，ATLER不进行更改，并抛出一个 warning。

   STRICT_TRANS_TABLES

   设置它，表示启用严格模式。

   注意 STRICT_TRANS_TABLES 不是几种策略的组合，单独指 INSERT、UPDATE出现少值或无效值该如何处理:

   把 ‘’ 传给int，严格模式下非法，若启用非严格模式则变成0，产生一个warning Out Of Range，变成插入最大边界值

   A value is missing when a new row to be inserted does not contain a value for a non-NULL column that has no explicit DEFAULT clause in its definition


   mysql5.0以上版本支持三种sql_mode模式: set @@sql_mode=xxx模式名;

   我们常设置的 sql_mode 是 ANSI、STRICT_TRANS_TABLES、TRADITIONAL，其中ANSI和TRADITIONAL是上面的几种组合。

   ANSI模式:宽松模式,对插入数据进行校验,如果不符合定义类型或者长度,对数据类型调整或截断保存,报warning警告.

   TRADITIONAL模式:严格模式,当向MySQL数据库插入数据时,进行数据的严格校验,保证错误数据不能插入,报error错误.用于事务时,会进行事务的回滚.

   3.STRICT_TRANS_TABLES模式:严格模式，进行数据的严格校验，错误数据不能插入，报error错误。


二、困扰多时的ID号排序问题，删除中间，两头任一数据后，ID号顺序被打乱

   两步解决，thinkphp 写法

   1、Db::query('ALTER  TABLE  `zk_user` DROP `id`');

      删除ID号主键

   2、Db::query('ALTER  TABLE  `zk_user` ADD `id` int(3) PRIMARY KEY NOT NULL AUTO_INCREMENT FIRST;');

      重建主键，并设为第一字段，整型3位，数据非空，自动增长

    经以上两步解决，可完成ID号重新排序

三、前台jquery $.ajax()发送url请求的同步，异步问题

   指删除数据中，发现使用循环送后台处理删除时，往往第二个数据，报'internal server error 500',经查，

                          for (x in data){
                               //控制台输出数据
                               console.log(data[x].id);
                               var tid = data[x].id;
                               $.ajax({
                                   type:"get"
                                   ,url:"allDel/"+tid.toString()+"/"+"N"
                           **      ,async:true
                               });
                           }

   同步、异步处理设为异步为真，改为"async:false"

   须等后台处理完成后，才可返回前台处理下一步的jquery数据

四、layui.use('form', function(){}中layui.verfy()问题，密码前后两次验证，查http://www.bubuko.com/infodetail-1906284.html文章得出

     一.layer表单提交及验证方法（添加员工页面）

     <form class="layui-form layui-form-pane1 pzjzsj" action="">

      <div class="layui-form-item">

         <label class="layui-form-label">手机号</label>

         <div class="layui-input-inline">

           <input type="text" name="mobile" lay-verify="phone" placeholder="请输入手机号" autocomplete="off" class="layui-input" value="${PhomeUser.mobile }"/>

         </div>

       </div>

        <div class="layui-form-item">

         <label class="layui-form-label">真实姓名</label>

         <div class="layui-input-inline">

               <input type="text" name="truename" lay-verify="required" placeholder="请输入姓名" autocomplete="off" class="layui-input" value="${PhomeUser.truename }"/>

         </div>

       </div>

        <div class="layui-form-item">

         <label class="layui-form-label">员工类型</label>

         <div class="layui-input-inline">

     <select name="gid" lay-verify="required">

      <option value=""></option>

             <option value="2">普通员工</option>

             <option value="3">测试员工</option>

     </select>

         </div>

       </div>



         <div class="layui-form-item">

         <label class="layui-form-label">密码</label>

         <div class="layui-input-inline">

           <input type="password" name="firstpwd" id="firstpwd" lay-verify="firstpwd" placeholder="请输入密码" autocomplete="off" class="layui-input" value=""/>

         </div>

       </div>

         <div class="layui-form-item">

         <label class="layui-form-label">确认密码</label>

         <div class="layui-input-inline">

           <input type="password" name="secondpwd" id="secondpwd" lay-verify="secondpwd" placeholder="请再次输入密码" autocomplete="off" class="layui-input"/>

         </div>

       </div>



        <div class="layui-form-item">

        <label class="layui-form-label">系统分配</label>

          <a class="layui-btn layui-btn-normal" href="javascript:disAuthority()">选择系统分配</a>

          <input type="hidden" name="productCodes" id="productCodes" value="" lay-verify="productCodes" placeholder=""/>

        </div>



        <div class="layui-form-item">

        <label class="layui-form-label">权限</label>

         <input type="radio" name="quanxian" id="quanxian" value="0" title="查看"/>

           <input type="radio" name="quanxian" id="quanxian" value="1" title="维护" />

           <input type="hidden" name="sysqx" id="sysqx" value="" lay-verify="sysqx" placeholder=""/>

           <input type="hidden" name="view" id="view" value=""/>

           <input type="hidden" name="edit" id="edit" value=""/>

        </div>



     <!--默认按钮开始-->

     <div class="layui-form-item layui-inline">

      <button class="layui-btn layui-inline  fl w130" lay-submit lay-filter="save">保存</button>

     <button class="layui-btn layui-btn-primary layui-inline fr w130"  id="closeBtn">取消</button>

     </div>

     </form>

     <link rel="stylesheet" href="${path }/public/layui/css/layui.css"/>

     <link rel="stylesheet" href="${path }/public/css/style.css"/>

     <script src="${path }/public/layui/lay/dest/layui.all.js"></script>

     <script src="${path }/public/layui/lay/lib/jquery.js"></script>

     <script type="text/javascript">

      layui.use([‘layer‘, ‘form‘], function () {

     var layer = layui.layer, $ = layui.jquery, form = layui.form(); ******//注意此处有$符的定义！

     //表单验证

     form.verify({

     firstpwd: [/(.+){6,12}$/, ‘密码必须6到12位‘],

     secondpwd: function(value) {

     if(value != $("#firstpwd").val()){

     $("#secondpwd").val("");   *****//此处在我的程序adduser.js文件中，系统报错，

     return ‘确认密码与密码不一致‘;

     }

     },

     productCodes: function(value){

     if(value == ‘‘){

     return "请选择系统分配";

     }

     },

       sysqx: function(value){

     if(value == ‘‘){

     return "请选择权限";

     }

     }

     });

     //单选监听及过滤事件

      form.on(‘radio‘, function(data){

        if(data.value==0){

        $("#view").val(1);

        $("#edit").val(0);

        }else if(data.value==1){

        $("#view").val(0);

        $("#edit").val(1);

        }

        $("#sysqx").val(data.value);

        console.log(data.value)

     });

      //提交监听事件

       form.on(‘submit(save)‘, function (data) {

     params = data.field;

     //alert(JSON.stringify(params))

     submit($,params);

     return false;

     })

     var obj = document.getElementById(‘closeBtn‘);

     obj.addEventListener(‘click‘, function cancel(){

     CloseWin();

     });



     })

     //提交

     function submit($,params){

                 $.post(‘${path}/sys/user_systemallot_insert.do‘, params, function (res) {

                     if (res.status==1) {

                          layer.msg(res.message,{icon:1},function(index){

                          CloseWin();

                         })

                     }else if(res.status==2){

                     layer.msg(res.message,{icon:0},function(){

                     parent.location.href=‘${path}/sys/toLogin‘;

                     CloseWin();

                     })

                     }else{

                     layer.msg(res.message,{icon:0},function(){

                     location.reload(); // 页面刷新

                          return false

                     })

                     }

                 }, ‘json‘);

             }



      //关闭页面

      function CloseWin(){

     parent.location.reload(); // 父页面刷新

     var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引

      parent.layer.close(index); //再执行关闭

      }



      //window.open弹窗事件

      var openWin ;

      function disAuthority(){

     var url = ‘${path}/sys/user_systemallot.do‘;

     /*   layer.open({

      type: 2,

      title: ‘分配系统及权限‘,

      shadeClose: true,

      shade: false,

      maxmin: true, //开启最大化最小化按钮

      area: [‘800px‘, ‘500px‘],

      content: url

     });  */

     openWin = window.open(url,‘分配系统及权限‘,‘height=480,width=800,top=130,left=200,toolbar =no, menubar=no, scrollbars=no, resizable=no, location=no, status=no‘);

     }



      //设置系统编号（window.open弹出页面向父页面传值调取方法）

      function setCodes(codes){

     document.getElementById("productCodes").value=codes;

     openWin.close();

      }

     </script>





     <!------------二------------------ 权限管理页面------弹出页面-------------------------->

      //window.open弹出页面，选择系统权限表单（重点是选择checkbox,选中与取消）

     <form class="layui-form layui-form-pane1" action=""  name="formdemo">

       <div class="layui-form-item layui-inline">

             <div class="layui-input-block ml0">

             <input type="hidden" name="codings" id="codings"/>

          <a class="layui-btn layui-inline fr" href="javascript:selProduct()">分配</a>

          </div>

       </div>

     <!--表格开始-->

     <table class="layui-table" id="tbodyID" >

       <thead>

         <tr>

           <th><input type="checkbox" id="ckb_select" name="ckb_select"  value=""/></th>

           <th>系统名称</th>

           <th>机组数</th>

           <th>蒸发器数</th>

           <th>系统创建时间</th>

         </tr>

       </thead>

       <c:forEach items="${productList}" var="list">

      <tbody>

        <tr>

         <td><input  type="checkbox"  id="checknum" name="checknum" value="${list.coding }"/></td>

          <td>${list.title }</td>

          <td>${list.aircrewCnt }</td>

          <td>${list.evaporatorCnt }</td>

          <td>${list.creatTime} </td>

        </tr>

      </tbody>

        </c:forEach>

     </table>

     <!-- 表格结束 -->

     </form>



     <script>

     /*  layui.use([‘layer‘, ‘form‘,‘element‘], function () {

     var layer = layui.layer, $ = layui.jquery, form = layui.form(),element = layui.element();

       form.on(‘submit(distri)‘, function (data) {

     window.opener.setCodes(selectAll());

     return false;

     });

     })    */



     //window.open弹出页面调取父页面方法并赋值

     function selProduct(){

     window.opener.setCodes(selectAll());

     }



     //checkbox选中事件，全选及部分选择

     $(function(){

     $(‘#tbodyID #ckb_select‘).on(‘click‘,function(evt){

     var allCks = document.getElementsByName("ckb_select");

     var cks = document.getElementsByName("checknum");

     if(allCks[0].checked){

     for(i=0;i<cks.length;i++){

            cks[i].checked = true;

        }

     }else{

     for(i=0;i<cks.length;i++){

            cks[i].checked = false;

        }

     }

     });

     });



      //获取选中的checkbox所在行字段所有值的字符串拼接

     function selectAll(){

     var text = $("input:checkbox[name=‘checknum‘]:checked").map(function(index,elem) {

             return $(elem).val();

         }).get().join(‘,‘);

        //$("#codings").val(text);

        //alert("选中的checkbox的值为："+text);

         return text;

     }

     </script>



     <!-----------三--------------layer--------表单checkbox---默认选中事件------------------->

     <form class="layui-form layui-form-pane1 pzjzsj">

     <input type="hidden" name="productCoding" id="productCoding" value="${productCoding }">

     <input type="hidden" id="coding" name="coding" value="${coding }"/>

     <input type="hidden" id="status" name="status" value="${status }"/>

     <div class="layui-form-item layui-inline">

             <div class="layui-form-item layui-inline">

     <label class="layui-form-label">蒸发器开启：</label>

     <div class="layui-input-block" id="temp">

     <input type="checkbox" name="evpstatus" id="evpstatus" lay-skin="switch" value="${status }" <c:if test="${status eq 1}">checked</c:if>/>

     </div>

     </div>

         </div>

     <div class="layui-form-item layui-inline">

      <button class="layui-btn  layui-btn layui-inline  fl w130" lay-submit lay-filter="save">保存</button>

     <button class="layui-btn layui-btn-primary layui-inline fr w130"  id="closeBtn">取消</button>

     </div>

     </form>





     <script>

     layui.use(‘form‘, function(){

     var form = layui.form();

     form.on(‘switch‘, function(data){

        if(data.value==1){

        $("#evpstatus").val(0);

        }else{

        $("#evpstatus").val(1);

        }

     //console.log(data.value)

     });

      //监听提交

     form.on(‘submit(save)‘, function(data){

     params = data.field;

     //console.log(JSON.stringify(params))

     var obj = new Object();

     obj.productCoding = params.productCoding;

     obj.coding = params.coding;

     obj.parameter = "PE003";

     if(params.evpstatus == undefined){

     obj.value = "0";

     }else{

     obj.value = params.evpstatus;

     }

     console.log(JSON.stringify(obj));

     submit($,obj);

        return false;

      });

     });



     function submit($,params){

         $.post(‘${path}/ctrl/controlEdit‘, params, function (res) {

         console.log(JSON.stringify(res));

         layer.msg(res.msg,{icon:1},function(index){

         parent.location.href=path+‘/evaporator/list?productCoding=‘+‘${productCoding}‘;

              CloseWin();

             })

         }, ‘json‘);

     }



     //关闭页面

     var obj = document.getElementById(‘closeBtn‘);

     obj.addEventListener(‘click‘, function cancel(){

     CloseWin();

     });

     function CloseWin(){

     var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引

     parent.layer.close(index); //再执行关闭

     }

     </script>



     本文出自 “不凡人生——求知者” 博客


     经上文提示，$('#pass2').value()可以取得表格form中第二次密码值，但系统后台提示“$ is not defined” $未定义，经反复检查在开头layui.use([‘layer‘, ‘form‘], function () {}）处有$符的定义

五、ajax传递网页参数：参考https://www.cnblogs.com/axin85/p/7615528.html

    layui之ajax巨坑

    在使用layui做前端框架的时候，在请求ajax时，回调函数不执行问题，找了各种原因，各种的更改ajax参数类型和webapi返回类型 各种不行，最后发现layui默认是form提交，想要让他执行ajax回调就只是一句话 return false  看代码

    layui.use(['form', 'layer'], function () {
    $ = layui.jquery;
    var form = layui.form
    ,layer = layui.layer;

    //自定义验证规则
    form.verify({
    nikename: function (value) {
    if (value.length < 5) {
    return '昵称至少得5个字符啊';
    }
    }
    , pass: [/(.+){6,12}$/, '密码必须6到12位']
    , repass: function (value) {
    if ($('#L_pass').val() != $('#L_repass').val()) {
    return '两次密码不一致';
    }
    }
    });

    以上只是框架加载部分

    //监听提交
    form.on('submit(add)', function (data) {
    if (post_adduser) return;
    post_adduser = true;
    var UserName = $("#username").val();
    var Password = $("#L_pass").val();
    var FullName = $("#L_email").val();
    var Phone = $("#phone").val();
    var index = document.getElementById("Dropplace").selectedIndex;
    var p = document.getElementById("Dropplace").options[index].value;
    var index1 = document.getElementById("Droproles").selectedIndex;
    var c = document.getElementById("Droproles").options[index1].value;
    var RoleIDs = p + "||" + c;
    var loading = layer.load(1);
    var user = "{\"UserName\":\"" + UserName + "\",\"Password\":\"" + Password + "\",\"FullName\":\"" + FullName + "\",\"Phone\":\"" + Phone + "\",\"RoleIDs\":\"" + RoleIDs + "\"}";
    $.ajax({
    url: "http://xxxxxxxxxxxxxx/api/User/AddUser",
    //dataType: 'text',
    contentType: "application/json",
    data: user, //请求的附加参数，用json对象
    method: 'POST',
    success: function (res) {
    if (res == true) {
    post_adduser = false;
    layer.close(loading);
    layer.msg("添加成功", { icon: 6, time: 2000 }, function () {
    // 获得frame索引
    parent.location.reload();
    var index = parent.layer.getFrameIndex(window.name);
    //关闭当前frame
    parent.layer.close(index);
    });
    }
    else {
    post_adduser = false;
    layer.close(loading);
    layer.msg("添加失败", { icon: 5 });
    }

    },
    error: function () {
    post_adduser = false; //AJAX失败也需要将标志标记为可提交状态
    layer.close(loading);
    layer.msg("添加失败", { icon: 5 });
    }
    });
    return false;//只此一句
    });
    });

六、layui表单新增成功的思路

    ThinkPHP5.1.5 接收JSON数据代码

    public function uadd(Request $request){

            if ($request->isAjax()){                                 *******此处很重要，必须判断是否Ajax请求变量，此后就可以用 $_POST取JSON中字段内容
                //查数据库最大值，取ID+1后进行数据存储
                //取user表最大ID值
                $id = Db::table('zk_user')->max('id');
                $id = ++$id;
                //接收前台$.ajax传来JSON数据对象
                //赋值数组
                $userdata=[
                    'id'         => $id,
                    'name'       => $_POST['username'],
                    'password'   => md5($_POST['password2']),
                    'email'      => $_POST['email'],
                    'tel'        => $_POST['tel'],
                    'qq'         => $_POST['qq'],
                    'department' => $_POST['dep'],
                    'pic'        => $_POST['img'],
                    'address'    => $_POST['add'],
                    'note'       => $_POST['note'],
                    'delete_time'=> date('0000-00-00 00:00:00')
                ];
                $user = new User;

                $result = $user->save($userdata);

                $res = "";

                if ($result != ""){
                    //返回成功信息
                    $res = 1;
                    return $res;
                }else{
                    //返回失败信息
                    $res = 0;
                    return $res;
                }


            };

七、$.ajax成功后的刷新父页面

    参考：http://www.jb51.net/article/128275.htm

    form.on('submit(submit1)', function(data){
            //向usradd方法传递JSON数组
            var usrdata = data.field;

            console.log(usrdata);
            $.ajax({
                url:"uadd"
                ,dataType: 'json'
                ,data: usrdata
                ,type:'POST'
                ,success: function (res) {
                    if (res == 1){
                        layer.msg('数据添加成功！',{
                            icon: 1,
                            time: 1000 //2秒关闭（如果不配置，默认是3秒）
                        },function () {                                      *******此处以下三句写入layer.msg 函数中，以期实现对父页面的刷新
                            window.parent.location.reload();
                            var index = parent.layer.getFrameIndex(window.name);
                            parent.layer.close(index);
                        });
                    }else{
                        layer.msg('数据添加失败，请检查后台服务器！',{
                            icon: 5,
                            time: 1000 //2秒关闭（如果不配置，默认是3秒）
                        });
                    }
                }
                ,error: function(XMLHttpRequest, textStatus, errorThrown,msg) {
                    alert(XMLHttpRequest.status);
                    alert(XMLHttpRequest.readyState);
                    alert(textStatus);
                    alert(errorThrown);
                    alert(msg);
                    alert("废柴");
                }
                ,end: function () {
                    location.reload();
                }

            });

            return false;
        })

八、文件上传

    参考：https://baijiahao.baidu.com/s?id=1582424626737131414&wfr=spider&for=pc


        $file = $this->request->file('file');   *******获得文件整体

        $info = $file->move('../public/uploads');

if (res == 1){
                layer.msg('文件上传成功！', {
                    icon: 1,
                    time: 1000 //2秒关闭（如果不配置，默认是3秒
                })
                }else{
                    layer.msg('数据添加失败，请检查后台服务器！',{
                        icon: 5,
                        time: 1000 //2秒关闭（如果不配置，默认是3秒）
                    })
                }


//为上传图片文件准备文件名，随机取数字文件名
    function GetRandomNum(Min,Max){
        var Range = Max - Min;
        var Rand = Math.random();
        return(Min + Math.round(Rand * Range));
    }

    var fname = GetRandomNum(1,9);

    var fdata ="{\"code\":\""+0+"\",\"msg\":\""+ "" +"\",\"data\":\""+fname +"\"}";

    http://localhost/Index/Index/public/uploads/20180328/457cfb04cfe7550ce21a5862d3ad9e02.jpg


九、导出、导入csv文件

实际运用中EXCEL的导出比导入用的多，这里给大家分享一个导出CSV EXCEL导出，简单，方便。

首先我们在Thinkphp/Library/Think下新文件文件：Csv.class.php,thinkphp 5.0 以上版本应写为Csv.php,经验证可“use think\Csv”引入

<?php
namespace Think;
class Csv
{
    //导出csv文件
    public function put_csv($list,$title)
    {
        $file_name = "exam".time().".csv";
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename='.$file_name );
        header('Cache-Control: max-age=0');
        $file = fopen('php://output',"a");
        $limit = 1000;
        $calc = 0;
        foreach ($title as $v){
            $tit[] = iconv('UTF-8', 'GB2312//IGNORE',$v);
        }
        fputcsv($file,$tit);
        foreach ($list as $v){
            $calc++;
            if($limit == $calc){
                ob_flush();
                flush();
                $calc = 0;
            }
            foreach($v as $t){
                $tarr[] = iconv('UTF-8', 'GB2312//IGNORE',$t); //******注意：PHP扩展中可能没有iconv功能扩展
            }
            fputcsv($file,$tarr);
            unset($tarr);
        }
        unset($list);
        fclose($file);
        exit();
    }

    // csv导入,此格式每次最多可以处理1000条数据
    public function input_csv($csv_file) {
        $result_arr = array ();
        $i = 0;
        while($data_line = fgetcsv($csv_file,10000)) {
            if ($i == 0) {
                $GLOBALS ['csv_key_name_arr'] = $data_line;
                $i ++;
                continue;
            }
            foreach($GLOBALS['csv_key_name_arr'] as $csv_key_num => $csv_key_name ) {
                $result_arr[$i][$csv_key_name] = $data_line[$csv_key_num];
            }
            $i++;
        }
        return $result_arr;
    }
}
?>


然后我们在导出的时候，在对应的控制器同步use一下。

$csv=new Csv();
    $list=M("members")->field($field)->limit(10000)->select();//查询数据，可以进行处理
    $csv_title=array('用户ID','用户名','绑定邮箱','绑定手机','注册时间','注册IP');
    $csv->put_csv($list,$csv_title);

然后定义字段名，就是第一行的名字，处理后的数组需要与之对应，我个人测试过导出的话这个比PHPEXCEL快很多。而且CSV是中间格式比直接导出excel好多了。

https://blog.csdn.net/qq_37682202/article/details/79426810另有案例

在控制器中调用：

[php] view plain copy
<?php
namespace app\index\controller;
use think\Controller;
use think\Request;
use think\Db;
use think\Paginator;
use think\Validate;
use think\Csv;  //此处是csv文件实现的关键
class Index extends Controller
{
    public function _initialize()
    {
      header("Content-type:text/html;charset=utf-8");
    }
    /*
     * CSV试题导出
     */
    public function downQuestions()
    {
        $condition['qu_status'] = array('gt','-1');
        $csv = new Csv();  //实例化后才可以调用之前类文件定义好的方法
        $list = Db::table('gw_questions')->field('qu_name,qu_options,qu_answer,qu_describe,gw_topic.to_name,qu_time,te_name')->join('gw_topic','gw_topic.to_id=gw_questions.to_id')->join('gw_teacher','gw_teacher.te_id=gw_questions.te_id','LEFT')->where($condition)->select();
        $csv_title = array('题干内容','选项详情','参考答案','答案解析','题型','录入时间','录入人');
        $csv->put_csv($list,$csv_title);
    }

    /*
     * CSV试题导入
     */
    public function upQuestionsWrite()
    {
        // 获取表单上传文件
        $file = request()->file('examfile');
        if(empty($file)) {
            $this->error('请选择上传文件');
        }
        // 移动到框架应用根目录/public/uploads/ 目录下
        $info = $file->move(ROOT_PATH.'public'.DS.'upload');
        //获取文件（日期/文件），$info->getFilename();
        $filename = ROOT_PATH.'public'.DS.'upload/'.$info->getSaveName();
        $handle = fopen($filename,'r');
        $csv = new Csv();
        $result = $csv->input_csv($handle); // 解析csv
        $len_result = count($result);
        if($len_result == 0){
            $this->error('此文件中没有数据！');
        }
        $data_values = '';
        for($i = 1;$i < $len_result+1;$i ++) { // 循环获取各字段值
            $arr = array_values($result[$i]);
            $qu_name = iconv('gb2312','utf-8',$arr[0] ); // 中文转码
            $qu_options = iconv('gb2312','utf-8',$arr[1]);
            $qu_answer = $arr[2];
            $qu_describe = iconv('gb2312','utf-8',$arr[3]);
            $to_id = $arr[4];
            $te_id = 1; //添加试题的教师
            $data_values .= "('$qu_name','$qu_options','$qu_answer','$qu_describe','$to_id','$te_id'),";
        }
        $data_values = substr($data_values,0,- 1 ); // 去掉最后一个逗号
        fclose($handle); // 关闭指针
        // 批量插入数据表中
        $result = DB::execute("insert into gw_questions (qu_name,qu_options,qu_answer,qu_describe,to_id,te_id) values $data_values" );
        if($result){
            $this->success('文件上传成功，数据已经导入！','exampaper',3);
        }else{
            // 上传失败获取错误信息
            $this->error($file->getError());
        }
    }
}
?>

模板页表单（此处我的项目中使用了框架，样式可以按自己的需求修改）：
[html] view plain copy
<form action="{:url('index/index/upQuestionsWrite')}" method="post" class="form form-horizontal" enctype="multipart/form-data" id="addform">
    <div class="row cl">
    <label class="form-label col-xs-4 col-sm-2">选择试题文件：</label>
    <div class="btn-upload form-group">
        <input type="text" name="uploadfile" id="uploadfile" class="input-text upload-url radius" readonly> <a href="javascript:void();" class="btn btn-primary radius"><i class="Hui-iconfont"></i>浏览文件</a>
        <input type="file" name="examfile" class="input-file" multiple>
    </div>
    <a class="btn btn-success btn-submit">导入试题</a>
    </div>
</form>


[javascript] view plain copy
<script type="text/javascript">
$(function(){
    //表单提交时判断是否有文件存在
    $(".btn-submit").click(function(){
        if($("input[name='uploadfile']").val() == ''){
            alert("请选择CSV文件！");
            return false;
    }else{
        $("#addform").submit();
    }
    });
});
</script>


9.1 相关阅读

https://www.cnblogs.com/aademeng/articles/6233218.html

php中iconv函数使用方法
在选择用什么工具开发，唯一的指导标准就是：用最少的人力，最少的时间开发JavaEye网站，并且后期维护和持续升级，乃至重写的时候，代价最小。

首先排除Java和C#，代码太多太麻烦；
其次排除PHP，项目一大，代码一多，代码的管理很成问题，PHP缺乏一个起码的包管理机制；

a.上iconv的官方下载站点
http://ftp.gnu.org/pub/gnu/libiconv/
下面Windows版的iconv文件：libiconv-1.9.1.bin.woe32.zip
将这文件解压，将bin/下面的charset.dll，iconv.dll，iconv.exe拷贝到c:/windows/ (或其它的系统PATH中)
(ipaddr提醒你，这步是必须的，php_iconv.dll也是调用GNU的iconv库的，所以，先要安装GNU的iconv库)

b.开启php.ini里面的php_iconv.dll

c.重启Apache，再在phpinfo();检测是否开启iconv。
最近在做一个程序，需要用到iconv函数把抓取来过的utf-8编码的页面转成gb2312， 发现只有用iconv函数把抓取过来的数据一转码数据就会无缘无故的少一些。 让我郁闷了好一会儿，去网上一查资料才知道这是iconv函数的一个bug。iconv在转换字符”—”到gb2312时会出错
解决方法很简单，就是在需要转成的编码后加 “//IGNORE” 也就是iconv函数第二个参数后.如下：
以下为引用的内容：
iconv(”UTF-8″,”GB2312//IGNORE”,$data)
ignore的意思是忽略转换时的错误，如果没有ignore参数，所有该字符后面的字符串都无法被保存。

这个iconv()这个函数,在php5中是内置的.谢谢.

列子
<?php
echo $str= ‘你好,这里是卖咖啡!’;
echo ‘<br />’;

echo iconv(’GB2312′, ‘UTF-8′, $str);      //将字符串的编码从GB2312转到UTF-8
echo ‘<br />’;

echo iconv_substr($str, 1, 1, ‘UTF-8′);   //按字符个数截取而非字节
print_r(iconv_get_encoding());            //得到当前页面编码信息

echo iconv_strlen($str, ‘UTF-8′);         //得到设定编码的字符串长度



//也有这样用的

   $content = iconv(”UTF-8″,”gbk//TRANSLIT”,$content);
?>


当时重点考察Python和Ruby，因为有豆瓣的先例，开始很倾向于Python，而且我那个时候对Python比较熟悉，还曾经痴迷过一段时间的wxPython，对Zope和plone也有一些研究。 货运代理

但后来比较了Rails和Django之后，就倾向于Rails了，差距实在太大了，而且当时Django很不成熟，在很早期的版本。其实即便现在Django和Rails的差距也没有缩小过。

但让我最终下定决心的是potian在05年就大规模使用Rails的实际工程经验，我曾经去杭州就我比较质疑的问题当面请教过他，和他谈过以后，就决定用Rails了。


十、PHPExcel 處理插件

http://www.thinkphp.cn/topic/53674.html參考文章

phpstorm2018  http://www.oyksoft.com/soft/40722.html?pc=1